import React, { useState, useEffect } from 'react';

const ResumeAnalysisPopup = ({ isOpen, onClose, analysisData, resumeId }) => {
  const [animationState, setAnimationState] = useState('closed');

  useEffect(() => {
    if (isOpen) {
      setAnimationState('opening');
      const timer = setTimeout(() => setAnimationState('open'), 10);
      return () => clearTimeout(timer);
    } else {
      setAnimationState('closing');
      const timer = setTimeout(() => setAnimationState('closed'), 300);
      return () => clearTimeout(timer);
    }
  }, [isOpen]);

  if (animationState === 'closed') return null;

  // Mock data - replace with actual data from your API
  const analysis = analysisData || {
    score: '85/100',
    keySkills: [
      'performance marketing',
      'growth marketing',
      'user acquisition',
      'brand visibility enhancement',
      'customer acquisition cost reduction'
    ],
    strengths: [
      'Clear professional summary',
      'Quantifiable achievements',
      'Strong action verbs'
    ],
    improvements: [
      'Add more technical skills',
      'Quantify more achievements',
      'Customize for specific job descriptions'
    ]
  };

  return (
    <div className="fixed inset-0 flex items-center justify-center z-50">
      {/* Backdrop with blur effect */}
      <div 
        className={`absolute inset-0 backdrop-blur-sm bg-black/30 transition-opacity duration-300 ${
          animationState === 'opening' || animationState === 'closing' 
            ? 'opacity-0' 
            : 'opacity-100'
        }`}
        onClick={onClose}
      />
      
      {/* Popup content with Apple-inspired design */}
      <div 
        className={`relative bg-white/90 dark:bg-gray-800/90 rounded-xl shadow-2xl w-full max-w-2xl transform transition-all duration-300 mx-4 overflow-hidden backdrop-blur-md ${
          animationState === 'opening' ? 'scale-95 opacity-0' :
          animationState === 'closing' ? 'scale-95 opacity-0' :
          'scale-100 opacity-100'
        }`}
      >
        {/* Header with score */}
        <div className="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
          <div className="flex items-center space-x-3">
            <div className="flex items-center justify-center w-10 h-10 rounded-full bg-green-100 dark:bg-green-900">
              <svg xmlns="http://www.w3.org/2000/svg" className="w-6 h-6 text-green-600 dark:text-green-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h2 className="text-xl font-bold text-gray-900 dark:text-white">Analysis Results</h2>
          </div>
          
          <div className="flex items-center">
            <div className="text-3xl font-bold text-green-600 dark:text-green-400">{analysis.score}</div>
            <button onClick={onClose} className="ml-4 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
              <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
        </div>

        {/* Content area with scrolling */}
        <div className="p-6 max-h-96 overflow-y-auto">
          {/* Key Skills Section */}
          <div className="mb-8">
            <h3 className="text-lg font-medium text-gray-900 dark:text-white mb-3">Key Skills</h3>
            <div className="flex flex-wrap gap-2">
              {analysis.keySkills.map((skill, index) => (
                <span 
                  key={index} 
                  className="px-3 py-1 rounded-full text-sm bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200"
                >
                  {skill}
                </span>
              ))}
            </div>
          </div>

          {/* Strengths Section */}
          <div className="mb-8">
            <h3 className="text-lg font-medium text-gray-900 dark:text-white mb-3">Resume Strengths</h3>
            <ul className="space-y-2">
              {analysis.strengths.map((strength, index) => (
                <li key={index} className="flex items-start">
                  <svg className="h-5 w-5 text-green-500 dark:text-green-400 mr-2 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  <span className="text-gray-700 dark:text-gray-300">{strength}</span>
                </li>
              ))}
            </ul>
          </div>

          {/* Improvements Section */}
          <div>
            <h3 className="text-lg font-medium text-gray-900 dark:text-white mb-3">Suggested Improvements</h3>
            <ul className="space-y-2">
              {analysis.improvements.map((improvement, index) => (
                <li key={index} className="flex items-start">
                  <svg className="h-5 w-5 text-amber-500 dark:text-amber-400 mr-2 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                  </svg>
                  <span className="text-gray-700 dark:text-gray-300">{improvement}</span>
                </li>
              ))}
            </ul>
          </div>
        </div>

        {/* Footer with actions */}
        <div className="p-6 border-t border-gray-200 dark:border-gray-700 bg-gray-50/80 dark:bg-gray-800/80">
          <div className="flex flex-col sm:flex-row sm:justify-between gap-3">
            <button 
              onClick={onClose}
              className="px-4 py-2 rounded-lg text-gray-700 bg-gray-200 hover:bg-gray-300 dark:text-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 transition-colors"
            >
              Close
            </button>
            <div className="flex space-x-3">
              <button className="px-4 py-2 rounded-lg text-white bg-blue-600 hover:bg-blue-700 dark:bg-blue-700 dark:hover:bg-blue-600 transition-colors">
                Download PDF
              </button>
              <button className="px-4 py-2 rounded-lg text-white bg-green-600 hover:bg-green-700 dark:bg-green-700 dark:hover:bg-green-600 transition-colors">
                Apply Improvements
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ResumeAnalysisPopup;